{{! Template for the frost-list component }}

<div class='frost-list-header {{if pagination 'paged'}}'>
  {{#if sorting}}
    {{component sorting
      hook=(concat hookPrefix '-sorting')
    }}
  {{/if}}

  <div class='frost-list-header-end'>
    {{#if pagination}}
      {{component pagination
        hook=(concat hookPrefix '-pagination')
      }}
    {{/if}}

    {{#if (and pagination itemExpansion)}}
      <div class='frost-list-header-divider'></div>
    {{/if}}

    {{#if itemExpansion}}
      {{frost-list-expansion
        hook=(concat hookPrefix '-expansion')
        onCollapseAll=(action '_collapseAll')
      Â  onExpandAll=(action '_expandAll')
      }}
    {{/if}}
  </div>
</div>

<div class='frost-list-content-container-top-border {{if pagination 'paged'}}'></div>
{{#frost-list-content-container
  alwaysUseDefaultHeight=alwaysUseDefaultHeight
  bufferSize=bufferSize
  defaultHeight=defaultHeight
  hook=(concat hookPrefix '-contentContainer')
  itemMaps=itemMaps
  items=_items
  itemKey=itemKey
  pagination=pagination
  scrollTop=scrollTop
  onLoadNext=onLoadNext
  onLoadPrevious=onLoadPrevious
  as |model index|
}}
  <div class={{concat
      'frost-list-item-container'
      (if (eq index 0) ' first')
      (if (eq index (sub _items.length 1)) ' last')
      (if model.states.isSelected ' is-selected')
    }}
    data-test={{hook (concat hook '-item-container') index=index }}
  >
    <div class='frost-list-item-container-base'>
      {{#if itemExpansion}}
        {{frost-list-item-expansion
          hook=(concat hookPrefix '-expansion')
          hookQualifiers=(hash index=index)
          model=model.content
          isExpanded=model.states.isExpanded
          onExpand=(action '_expand')
        }}
      {{/if}}

      {{#if onSelectionChange}}
        {{frost-list-item-selection
          hook=(concat hookPrefix '-selection')
          hookQualifiers=(hash index=index)
          model=model.content
          isSelected=model.states.isSelected
          onSelect=(action '_select')
        }}
      {{/if}}

      {{#if itemMaps}}
        {{component (get (get itemMaps model.type) 'item')
          hook=(concat hookPrefix '-item')
          hookQualifiers=(hash index=index)
          model=model.content
          isExpanded=model.states.isExpanded
          isSelected=model.states.isSelected
          onSelect=(action '_select')
        }}
      {{else}}
        {{component item
          hook=(concat hookPrefix '-item')
          hookQualifiers=(hash index=index)
          model=model.content
          isExpanded=model.states.isExpanded
          isSelected=model.states.isSelected
          onSelect=(action '_select')
        }}
      {{/if}}
    </div>

    {{#if model.states.isExpanded}}
      {{#if itemMaps}}
        <div class='frost-list-item-container-expansion'>
          {{component (get (get itemMaps model.type) 'itemExpansion')
            hook=(concat hookPrefix '-item-expansion')
            hookQualifiers=(hash index=index)
            model=model.content
            isExpanded=model.states.isExpanded
            isSelected=model.states.isSelected
            onSelect=(action '_select')
          }}
        </div>
      {{else}}
        {{component itemExpansion
          hook=(concat hookPrefix '-item-expansion')
          hookQualifiers=(hash index=index)
          model=model.content
          isExpanded=model.states.isExpanded
          isSelected=model.states.isSelected
          onSelect=(action '_select')
        }}
      {{/if}}
    {{/if}}
  </div>
{{else}}
  {{yield to="inverse"}}
{{/frost-list-content-container}}
<div class='frost-list-content-container-bottom-border {{if pagination 'paged'}}'></div>
